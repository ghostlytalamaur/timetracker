/**
 * append following code to project build.gradle
 *    buildscript {
 *       apply from: "versions.gradle"
 *    }
 *
 */

def versions = [:]
versions.dagger = "2.16"
versions.room = "1.1.0"
versions.lifecycle = "1.1.1"
versions.arch_core = "1.1.1"
versions.espresso = "3.0.1"
versions.support = "27.1.1"
versions.androidx_lifecycle = "2.1.0-alpha01"
versions.androidx_room = "2.1.0-alpha03"
versions.androidx_espresso = "3.1.1"
versions.androidx_appcompat = "1.1.0-alpha01"
versions.androidx_constraintlayout = "2.0.0-alpha3"
versions.androidx_preference = "1.1.0-alpha02"
versions.androidx_recyclerview = "1.0.0"

ext.versions = versions

def build_versions = [:]
build_versions.min_sdk = 21
build_versions.target_sdk = 28
build_versions.build_tools = "28.0.3"
build_versions.source_compatibility = JavaVersion.VERSION_1_8
build_versions.target_compatibility = JavaVersion.VERSION_1_8

ext.build_versions = build_versions


def androidx_lifecycle = [:]
// ViewModel and LiveData
androidx_lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.androidx_lifecycle"
// alternatively - just ViewModel
androidx_lifecycle.viewmodel = "androidx.lifecycle:lifecycle-viewmodel:$versions.androidx_lifecycle" // use -ktx for Kotlin
// alternatively - just LiveData
androidx_lifecycle.livedata = "androidx.lifecycle:lifecycle-livedata:$versions.androidx_lifecycle"
// alternatively - Lifecycles only (no ViewModel or LiveData). Some UI
//     AndroidX libraries use this lightweight import for Lifecycle
androidx_lifecycle.lifecycle = "androidx.lifecycle:lifecycle-runtime:$versions.androidx_lifecycle"
androidx_lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.androidx_lifecycle" // use kapt for Kotlin
// alternately - if using Java8, use the following instead of lifecycle-compiler
androidx_lifecycle.java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.androidx_lifecycle"
// optional - ReactiveStreams support for LiveData
androidx_lifecycle.reactivestreams = "androidx.lifecycle:lifecycle-reactivestreams:$versions.androidx_lifecycle" // use -ktx for Kotlin
// optional - Test helpers for LiveData
androidx_lifecycle.test ="androidx.arch.core:core-testing:$versions.androidx_lifecycle"

def androidx_room = [:]
androidx_room.runtime = "androidx.room:room-runtime:$versions.androidx_room"
androidx_room.compiler = "androidx.room:room-compiler:$versions.androidx_room" // use kapt for Kotlin
// optional - RxJava support for Room
androidx_room.rxjava = "androidx.room:room-rxjava2:$versions.androidx_room"
// optional - Guava support for Room, including Optional and ListenableFuture
androidx_room.guave = "androidx.room:room-guava:$versions.androidx_room"
// optional - Coroutines support for Room
androidx_room.coroutines = "androidx.room:room-coroutines:$versions.androidx_room"
// Test helpers
androidx_room.test = "androidx.room:room-testing:$versions.androidx_room"

def androidx_espresso = [:]
androidx_espresso.core = "androidx.test.espresso:espresso-core:$versions.androidx_espresso"

def androidx_constraintlayout = [:]
androidx_constraintlayout.constraintlayout = "androidx.constraintlayout:constraintlayout:$versions.androidx_constraintlayout"

def androidx_preference = [:]
androidx_preference.preference = "androidx.preference:preference:$versions.androidx_preference"

def androidx_legacy = [:]
androidx_legacy.support = "androidx.legacy:legacy-support-v4:1.0.0"
androidx_legacy.preference = "androidx.legacy:legacy-preference-v14:1.0.0"

def androidx_recyclerview = [:]
androidx_recyclerview.recyclerview = "androidx.recyclerview:recyclerview:$versions.androidx_recyclerview"
androidx_recyclerview.selection = "androidx.recyclerview:recyclerview-selection:$versions.androidx_recyclerview"

def androidx = [:]
androidx.lifecycle = androidx_lifecycle
androidx.room = androidx_room
androidx.espresso = androidx_espresso
androidx.appcompat = "androidx.appcompat:appcompat:$versions.androidx_appcompat"
androidx.constraintlayout = androidx_constraintlayout
androidx.preference = androidx_preference
androidx.legacy = androidx_legacy
androidx.recyclerview = androidx_recyclerview

def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android =  "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"

def support = [:]
support.app_compat ="com.android.support:appcompat-v7:$versions.support"
support.support = "com.android.support:support-v4:$versions.support"
support.design = "com.android.support:design:$versions.support"
support.constraint_layout = "com.android.support.constraint:constraint-layout:1.1.0"
support.card_view = "com.android.support:cardview-v7:$versions.support"
support.recycler_view = "com.android.support:recyclerview-v7:$versions.support"
support.preferencev7 = "com.android.support:preference-v7:$versions.support"
support.preferencev14 = "com.android.support:preference-v14:$versions.support"

def rxjava = [:]
rxjava.rxjava2 = "io.reactivex.rxjava2:rxjava:2.1.14"

def room = [:]
room.runtime = "android.arch.persistence.room:runtime:$versions.room"
room.compiler = "android.arch.persistence.room:compiler:$versions.room"
room.rxjava2 = "android.arch.persistence.room:rxjava2:$versions.room"
room.testing = "android.arch.persistence.room:testing:$versions.room"

def lifecycle = [:]
lifecycle.runtime = "android.arch.lifecycle:runtime:$versions.lifecycle"
lifecycle.extensions = "android.arch.lifecycle:extensions:$versions.lifecycle"
lifecycle.java8 = "android.arch.lifecycle:common-java8:$versions.lifecycle"
lifecycle.compiler = "android.arch.lifecycle:compiler:$versions.lifecycle"
lifecycle.reactivestreams = "android.arch.lifecycle:reactivestreams:$versions.lifecycle"

def arch_core = [:]
arch_core.testing = "android.arch.core:core-testing:$versions.arch_core"

def junit = [:]
junit.junit = "junit:junit:4.12"

def espresso = [:]
espresso.core = "com.android.support.test.espresso:espresso-core:$versions.espresso"
espresso.contrib = "com.android.support.test.espresso:espresso-contrib:$versions.espresso"
espresso.intents = "com.android.support.test.espresso:espresso-intents:$versions.espresso"

def eventbus = [:]
eventbus.eventbus = "org.greenrobot:eventbus:3.1.1"
eventbus.compiler = "org.greenrobot:eventbus-annotation-processor:3.1.1"

def deps = [:]
deps.dagger = dagger
deps.support = support
deps.room = room
deps.lifecycle = lifecycle
deps.arch_core = arch_core
deps.junit = junit
deps.espresso = espresso
deps.eventbus = eventbus
deps.rxjava = rxjava
deps.androidx = androidx
deps.material = 'com.google.android.material:material:1.1.0-alpha02'
deps.materialcalendarview = 'com.github.prolificinteractive:material-calendarview:2.0.0'
deps.joda_time = 'joda-time:joda-time:2.9.9'
ext.deps = deps

static def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.mavenCentral()
    handler.mavenLocal()
    handler.maven { url "https://jitpack.io" }
}

ext.addRepos = this.&addRepos